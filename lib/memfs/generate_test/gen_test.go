// Code generated by github.com/shuLhan/share/lib/memfs DO NOT EDIT.

package test

import (
	"github.com/shuLhan/share/lib/memfs"
)

func generate_() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "testdata",
		Path:            "/",
		ContentType:     "",
		ContentEncoding: "",
	}
	node.SetMode(2147484141)
	node.SetName("/")
	node.SetSize(0)
	return node
}

func generate_direct() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "testdata/direct",
		Path:            "/direct",
		ContentType:     "",
		ContentEncoding: "",
	}
	node.SetMode(2147484141)
	node.SetName("direct")
	node.SetSize(0)
	return node
}

func generate_direct_add() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "testdata/direct/add",
		Path:            "/direct/add",
		ContentType:     "",
		ContentEncoding: "",
	}
	node.SetMode(2147484141)
	node.SetName("add")
	node.SetSize(0)
	return node
}

func generate_direct_add_file() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "testdata/direct/add/file",
		Path:            "/direct/add/file",
		ContentType:     "text/plain; charset=utf-8",
		ContentEncoding: "",
		V:               []byte("\x54\x65\x73\x74\x20\x64\x69\x72\x65\x63\x74\x20\x61\x64\x64\x20\x66\x69\x6C\x65\x2E\x0A"),
	}
	node.SetMode(420)
	node.SetName("file")
	node.SetSize(22)
	return node
}

func generate_direct_add_file2() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "testdata/direct/add/file2",
		Path:            "/direct/add/file2",
		ContentType:     "text/plain; charset=utf-8",
		ContentEncoding: "",
		V:               []byte("\x54\x65\x73\x74\x20\x64\x69\x72\x65\x63\x74\x20\x61\x64\x64\x20\x66\x69\x6C\x65\x20\x32\x2E\x0A"),
	}
	node.SetMode(420)
	node.SetName("file2")
	node.SetSize(24)
	return node
}

func generate_exclude() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "testdata/exclude",
		Path:            "/exclude",
		ContentType:     "",
		ContentEncoding: "",
	}
	node.SetMode(2147484141)
	node.SetName("exclude")
	node.SetSize(0)
	return node
}

func generate_exclude_index_css() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "testdata/exclude/index.css",
		Path:            "/exclude/index.css",
		ContentType:     "text/css; charset=utf-8",
		ContentEncoding: "",
		V:               []byte("\x62\x6F\x64\x79\x20\x7B\x0A\x7D\x0A"),
	}
	node.SetMode(420)
	node.SetName("index.css")
	node.SetSize(9)
	return node
}

func generate_exclude_index_html() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "testdata/exclude/index.html",
		Path:            "/exclude/index.html",
		ContentType:     "text/html; charset=utf-8",
		ContentEncoding: "",
		V:               []byte("\x3C\x68\x74\x6D\x6C\x3E\x3C\x2F\x68\x74\x6D\x6C\x3E\x0A"),
	}
	node.SetMode(420)
	node.SetName("index.html")
	node.SetSize(14)
	return node
}

func generate_exclude_index_js() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "testdata/exclude/index.js",
		Path:            "/exclude/index.js",
		ContentType:     "application/javascript",
		ContentEncoding: "",
		V:               []byte("\x66\x75\x6E\x63\x74\x69\x6F\x6E\x20\x58\x28\x29\x20\x7B\x7D\x0A"),
	}
	node.SetMode(420)
	node.SetName("index.js")
	node.SetSize(16)
	return node
}

func generate_include() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "testdata/include",
		Path:            "/include",
		ContentType:     "",
		ContentEncoding: "",
	}
	node.SetMode(2147484141)
	node.SetName("include")
	node.SetSize(0)
	return node
}

func generate_include_index_css() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "testdata/include/index.css",
		Path:            "/include/index.css",
		ContentType:     "text/css; charset=utf-8",
		ContentEncoding: "",
		V:               []byte("\x62\x6F\x64\x79\x20\x7B\x0A\x7D\x0A"),
	}
	node.SetMode(420)
	node.SetName("index.css")
	node.SetSize(9)
	return node
}

func generate_include_index_html() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "testdata/include/index.html",
		Path:            "/include/index.html",
		ContentType:     "text/html; charset=utf-8",
		ContentEncoding: "",
		V:               []byte("\x3C\x68\x74\x6D\x6C\x3E\x3C\x2F\x68\x74\x6D\x6C\x3E\x0A"),
	}
	node.SetMode(420)
	node.SetName("index.html")
	node.SetSize(14)
	return node
}

func generate_include_index_js() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "testdata/include/index.js",
		Path:            "/include/index.js",
		ContentType:     "application/javascript",
		ContentEncoding: "",
		V:               []byte("\x66\x75\x6E\x63\x74\x69\x6F\x6E\x20\x58\x28\x29\x20\x7B\x7D\x0A"),
	}
	node.SetMode(420)
	node.SetName("index.js")
	node.SetSize(16)
	return node
}

func generate_index_css() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "testdata/index.css",
		Path:            "/index.css",
		ContentType:     "text/css; charset=utf-8",
		ContentEncoding: "",
		V:               []byte("\x62\x6F\x64\x79\x20\x7B\x0A\x7D\x0A"),
	}
	node.SetMode(420)
	node.SetName("index.css")
	node.SetSize(9)
	return node
}

func generate_index_html() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "testdata/index.html",
		Path:            "/index.html",
		ContentType:     "text/html; charset=utf-8",
		ContentEncoding: "",
		V:               []byte("\x3C\x68\x74\x6D\x6C\x3E\x3C\x2F\x68\x74\x6D\x6C\x3E\x0A"),
	}
	node.SetMode(420)
	node.SetName("index.html")
	node.SetSize(14)
	return node
}

func generate_index_js() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "testdata/index.js",
		Path:            "/index.js",
		ContentType:     "application/javascript",
		ContentEncoding: "",
		V:               []byte("\x66\x75\x6E\x63\x74\x69\x6F\x6E\x20\x58\x28\x29\x20\x7B\x7D\x0A"),
	}
	node.SetMode(420)
	node.SetName("index.js")
	node.SetSize(16)
	return node
}

func generate_plain() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "testdata/plain",
		Path:            "/plain",
		ContentType:     "text/plain; charset=utf-8",
		ContentEncoding: "",
		V:               []byte("\x54\x68\x69\x73\x20\x69\x73\x20\x61\x20\x70\x6C\x61\x69\x6E\x20\x74\x65\x78\x74\x2E\x0A"),
	}
	node.SetMode(420)
	node.SetName("plain")
	node.SetSize(22)
	return node
}

func init() {
	memfs.GeneratedPathNode = memfs.NewPathNode()
	memfs.GeneratedPathNode.Set("/", generate_())
	memfs.GeneratedPathNode.Set("/direct", generate_direct())
	memfs.GeneratedPathNode.Set("/direct/add", generate_direct_add())
	memfs.GeneratedPathNode.Set("/direct/add/file", generate_direct_add_file())
	memfs.GeneratedPathNode.Set("/direct/add/file2", generate_direct_add_file2())
	memfs.GeneratedPathNode.Set("/exclude", generate_exclude())
	memfs.GeneratedPathNode.Set("/exclude/index.css", generate_exclude_index_css())
	memfs.GeneratedPathNode.Set("/exclude/index.html", generate_exclude_index_html())
	memfs.GeneratedPathNode.Set("/exclude/index.js", generate_exclude_index_js())
	memfs.GeneratedPathNode.Set("/include", generate_include())
	memfs.GeneratedPathNode.Set("/include/index.css", generate_include_index_css())
	memfs.GeneratedPathNode.Set("/include/index.html", generate_include_index_html())
	memfs.GeneratedPathNode.Set("/include/index.js", generate_include_index_js())
	memfs.GeneratedPathNode.Set("/index.css", generate_index_css())
	memfs.GeneratedPathNode.Set("/index.html", generate_index_html())
	memfs.GeneratedPathNode.Set("/index.js", generate_index_js())
	memfs.GeneratedPathNode.Set("/plain", generate_plain())
}
